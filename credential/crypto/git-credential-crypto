#!/bin/sh

if [ "$GIT_CREDENTIAL_CRYPTO_PASSWORD" = "" ]; then
  echo '$GIT_CREDENTIAL_CRYPTO_PASSWORD is required'
  exit 1
fi

if [ "$GIT_CREDENTIAL_CRYPTO_FILE" = "" ]; then
  GIT_CREDENTIAL_CRYPTO_FILE=~/.git-credentials.enc
fi

method=$1

get_creds() {
  if [ -f $GIT_CREDENTIAL_CRYPTO_FILE ]; then
    cat $GIT_CREDENTIAL_CRYPTO_FILE | openssl enc -d -nosalt -aes-256-cbc -pbkdf2 -k $GIT_CREDENTIAL_CRYPTO_PASSWORD
  fi
}

if [ "$method" = "get" ]; then
  while read line; do
    if [ "$line" = "" ]; then
      break
    fi
    eval $line
  done

  if [ "$protocol" = "" ] || [ "$host" = "" ]; then
    exit 1
  fi

  for cred in `get_creds`; do
    cat << EOF | python
try:
  from urllib.parse import urlparse
except ImportError:
  from urlparse import urlparse

url = urlparse('$cred')

if url.scheme == '$protocol' and url.hostname == '$host':
  print('protocol={}'.format(url.scheme))
  print('host={}'.format(url.hostname))
  print('username={}'.format(url.username))
  print('password={}'.format(url.password))
  exit(1)
EOF
    if [ $? = 1 ]; then
      break
    fi
  done

elif [ "$method" = "store" ]; then
  while read line; do
    if [ "$line" = "" ]; then
      break
    fi
    eval $line
  done

  if
    [ "$protocol" = "" ] || [ "$host" = "" ] ||
    [ "$username" = "" ] || [ "$password" = "" ]
  then
    exit 1
  fi

  creds=`get_creds`

  cat << EOF | python | openssl enc -e -nosalt -aes-256-cbc -pbkdf2 -k $GIT_CREDENTIAL_CRYPTO_PASSWORD > $GIT_CREDENTIAL_CRYPTO_FILE
try:
  from urllib.parse import urlparse
except ImportError:
  from urlparse import urlparse

new_creds = []

for cred in """$creds""".split():
  url = urlparse(cred)

  if url.scheme != '$protocol' or url.hostname != '$host':
    new_creds.append(cred)

new_creds.append('$protocol://$username:$password@$host')

print('\n'.join(new_creds))
EOF
  chmod 600 $GIT_CREDENTIAL_CRYPTO_FILE
fi
